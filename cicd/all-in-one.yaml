apiVersion: apps/v1
kind: Deployment
metadata:
  name: projectapp-backend
spec:
  selector:
    matchLabels:
      name: projectapp-backend
  template:
    metadata:
      labels:
        name: projectapp-backend
    spec:
      containers:
      - name: backend
        # image: k8smaestro/projectapp-backend:2.0
        image: <IMAGE_BACKEND>:<VERSION>
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: service-projectapp-backend
spec:
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
  type: ClusterIP
  selector:
    name: projectapp-backend
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: projectapp-frontend-nginx-conf
data:
  nginx.conf: |
    # The identifier Backend is internal to nginx, and used to name this specific upstream
    upstream Backend {
        # service-projectapp-backend is the internal DNS name used by the backend Service inside Kubernetes
        server service-projectapp-backend;
    }

    server {
      listen       8080;
      listen  [::]:8080;
      server_name  localhost;

      location / {
          root   /usr/share/nginx/html;
          index  index.html index.htm;
      }

      location /api {
        # The following statement will proxy traffic to the upstream named Backend
        rewrite ^/api(.*) $1 break;
        proxy_pass http://Backend;
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: projectapp-frontend
spec:
  selector:
    matchLabels:
      name: projectapp-frontend
  template:
    metadata:
      labels:
        name: projectapp-frontend
    spec:
      containers:
      - name: frontend
        # image: k8smaestro/projectapp-frontend:2.0
        image: <IMAGE_FRONTEND>:<VERSION>
        ports:
        - containerPort: 8080
        env:
        - name: API_URL
          value: "/api"
        volumeMounts:
        - mountPath: /etc/nginx/conf.d # mount nginx-conf volume to /etc/nginx/conf.d
          readOnly: true
          name: projectapp-frontend-nginx-conf
      volumes:
      - name: projectapp-frontend-nginx-conf
        configMap:
          name: projectapp-frontend-nginx-conf # place ConfigMap `nginx-conf` on /etc/nginx/conf.d/default.conf file
          items:
            - key: nginx.conf
              path: default.conf
---
apiVersion: v1
kind: Service
metadata:
  name: service-projectapp-frontend
spec:
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
  type: LoadBalancer
  selector:
    name: projectapp-frontend